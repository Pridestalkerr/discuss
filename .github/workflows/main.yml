name: CI

on:
  push:
    branches: ['main']
    paths-ignore:
      - '**.MD'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: deploy
    steps:
      - name: Checkout repo and history
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build affected
      - uses: nrwl/nx-set-shas@v3
      - run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"
      - run: npm ci
      # - run: npx nx workspace-lint
      # - run: npx nx format:check
      # - run: npx nx affected --target=lint --parallel --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }}
      # - run: npx nx affected --target=test --parallel --ci --code-coverage --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }}
      # - run: npx nx affected --target=build --parallel --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }}
      # build all projects with nx for production
      - run: npx nx run-many --target=build --all --configuration=production

      - name: Set up QEMU
      - uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
      - uses: docker/setup-buildx-action@v2

      - name: Login to Docker registry
      - uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend
      - uses: docker/build-push-action@v2
        with:
          context: .
          file: ./apps/discuss-backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/discuss-backend:${{ github.sha }}

      - name: Build and push frontend
      - uses: docker/build-push-action@v2
        with:
          context: .
          file: ./apps/discuss-frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/discuss-frontend:${{ github.sha }}

      - name: Install SSH key
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'placeholder'
          if_key_exists: 'replace'

      - name: Add Known Hosts
      - run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Copy docker-compose.yml to server
      - uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ./docker-compose.yml
          target: ~/discuss/docker-compose.yml

      - name: Trigger deploy script on server
      - uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: DOCKER_REGISTRY
          script: |
            echo $DOCKER_REGISTRY
            wall $DOCKER_REGISTRY
          # cd ~/discuss
          # chmod +x ./deploy.sh
          # ./deploy.sh
